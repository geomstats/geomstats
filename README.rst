Geomstats
=========

.. list-table::
   :header-rows: 0

   * - **Code**
     - |PyPI version|\ |Downloads|\  |Zenodo|\
   * - **Continuous Integration**
     - |Build Status|\ |python|\
   * - **Code coverage (numpy)**
     - |Coverage Status np|\
   * - **Code coverage (autograd, tensorflow, pytorch)**
     - |Coverage Status autograd|\ |Coverage Status tf|\ |Coverage Status torch|
   * - **Documentation**
     - |doc|\  |binder|\ |tutorial|\
   * - **Community**
     - |contributions|\  |Slack|\  |Twitter|\

**NEWS**:

- Next hackathon will be on October 17-21, 2022 in Paris. Interested? Reach out to us on slack!
- Google's Season of Docs (SoD) 2022: Geomstats is participating! Interested?
   - Find out more about being a Google SoD's `writer <https://developers.google.com/season-of-docs/docs/tech-writer-guide>`_ and about Geomstats' `proposal <https://geomstats.github.io/gsod.html>`_.
   - Feel free to reach out to us, and/or to register your interest on the `SoD 2022 github repository <https://github.com/google/season-of-docs/tree/main/2022-participants>`_.
   - Submit your `statement of interest <https://developers.google.com/season-of-docs/docs/tech-writer-statement>`_ via email to nmiolane@gmail.com before May 1st, at 18:00 UTC.
   - Selected technical writers will be notified no later than May 16th.

- The white papers summarizing the findings from our ICLR 2021 and 2022 challenges of computational differential geometry and topology are available `here (2021) <https://arxiv.org/abs/2108.09810>`__ and `here (2022) <https://arxiv.org/abs/2206.09048>`_.

- Check out our new  `information_geometry <https://github.com/geomstats/geomstats/tree/master/geomstats/information_geometry>`_ module.

Geomstats is an open-source Python package for computations and
statistics on manifolds. The package is organized into two main modules:
``geometry`` and ``learning``.

The module ``geometry`` implements concepts in differential geometry,
and the module ``learning`` implements statistics and learning
algorithms for data on manifolds.

-  To get an overview of ``geomstats``, see our `introductory
   video <https://www.youtube.com/watch?v=Ju-Wsd84uG0&list=PLYx7XA2nY5GejOB1lsvriFeMytD1-VS1B&index=3>`__.
-  To get started with ``geomstats``, see the
   `examples <https://github.com/geomstats/geomstats/tree/master/examples>`__
   and
   `notebooks <https://github.com/geomstats/geomstats/tree/master/notebooks>`__
   directories.
-  The documentation of ``geomstats`` can be found on the `documentation
   website <https://geomstats.github.io/>`__.
- Interested in information geometry? Go to our `information_geometry <https://github.com/geomstats/geomstats/tree/master/geomstats/information_geometry>`_ module.
-  To follow the scientific literature on geometric statistics, follow
   our twitter-bot `@geomstats <https://twitter.com/geomstats>`__!

Keep in touch with the community by joining us on our `slack workspace <https://join.slack.com/t/geomstats/shared_invite/zt-15t8k0q7r-Duxt6j6aA3rDOIms2Vd~RQ>`__!


Citing Geomstats
================

If you find ``geomstats`` useful, please kindly cite:

- our research `paper <https://jmlr.org/papers/v21/19-027.html>`__ :

::

    @article{JMLR:v21:19-027,
      author  = {Nina Miolane and Nicolas Guigui and Alice Le Brigant and Johan Mathe and Benjamin Hou and Yann Thanwerdas and Stefan Heyder and Olivier Peltre and Niklas Koep and Hadi Zaatiti and Hatem Hajri and Yann Cabanes and Thomas Gerald and Paul Chauchat and Christian Shewmake and Daniel Brooks and Bernhard Kainz and Claire Donnat and Susan Holmes and Xavier Pennec},
      title   = {Geomstats:  A Python Package for Riemannian Geometry in Machine Learning},
      journal = {Journal of Machine Learning Research},
      year    = {2020},
      volume  = {21},
      number  = {223},
      pages   = {1-9},
      url     = {http://jmlr.org/papers/v21/19-027.html}
    }

- and `Geomstats software version <https://zenodo.org/record/5558028>`__ (citation automatically generated by Zenodo at the bottom right of this link).

We would sincerely appreciate citations to both the original research paper and the software version, to acknowledge authors who started the codebase and made the library possible, together with the crucial work of all contributors who are continuously implementing pivotal new geometries and important learning algorithms, as well as refactoring, testing and documenting the code to democratize geometric statistics and (deep) learning and foster reproducible research in this field.

Install geomstats via pip3
--------------------------

From a terminal (OS X & Linux), you can install geomstats and its
requirements with ``pip3`` as follows:

::

    pip3 install geomstats

This method installs the latest version of geomstats that is uploaded on
PyPi. Note that geomstats is only available with Python3.

Install geomstats via Git
-------------------------

From a terminal (OS X & Linux), you can install geomstats and its
requirements via ``git`` as follows:

::

    git clone https://github.com/geomstats/geomstats.git
    cd geomstats
    pip3 install .

This method installs the latest GitHub version of geomstats.


To add the requirements into a conda environment, you can use the
``enviroment.yml`` file as follows:

::

   conda env create --file environment.yml

Note that this only installs the minimum requirements. To add the optional,
development, continuous integration and documentation requirements,
refer to the file ``setup.cfg``.

Install geomstats : Developers
------------------------------

Developers should git clone the master branch of this repository, together with the development requirements
and the optional requirements to enable ``tensorflow`` and ``pytorch``
backends:

::

    pip3 install geomstats[dev,opt]

Additionally, we recommend installing our pre-commit hook, to ensure that your code
follows our Python style guidelines:

::

    pre-commit install


Choose the backend
------------------

Geomstats can run seamlessly with ``numpy``, ``autograd``, ``tensorflow`` or
``pytorch``. Note that ``autograd``, ``tensorflow`` and ``pytorch`` and requirements are
optional, as geomstats can be used with ``numpy`` only. By default, the
``numpy`` backend is used. The visualizations are only available with
this backend.

To get the ``autograd``, ``tensorflow`` and ``pytorch`` versions compatible with
geomstats, install the optional requirements:

::

    pip3 install geomstats[opt]

To install only the requirements for a given backend do:

::

    pip3 install geomstats[<backend_name>]

You can choose your backend by setting the environment variable
``GEOMSTATS_BACKEND`` to ``numpy``, ``autograd``, ``tensorflow`` or ``pytorch``, and
importing the ``backend`` module. From the command line:

::

    export GEOMSTATS_BACKEND=<backend_name>

and in the Python3 code:

::

    import geomstats.backend as gs

Getting started
---------------

To use ``geomstats`` for learning algorithms on Riemannian manifolds,
you need to follow three steps: 

* instantiate the manifold of interest,
* instantiate the learning algorithm of interest, 
* run the algorithm.

The data should be represented by a ``gs.array``. This structure
represents numpy arrays, or tensorflow/pytorch tensors, depending on the
choice of backend.

The following code snippet shows the use of tangent Principal Component
Analysis on simulated ``data`` on the space of 3D rotations.

.. code:: python

    from geomstats.geometry.special_orthogonal import SpecialOrthogonal
    from geomstats.learning.pca import TangentPCA

    so3 = SpecialOrthogonal(n=3, point_type="vector")
    metric = so3.bi_invariant_metric

    data = so3.random_uniform(n_samples=10)

    tpca = TangentPCA(metric=metric, n_components=2)
    tpca = tpca.fit(data)
    tangent_projected_data = tpca.transform(data)

All geometric computations are performed behind the scenes. The user
only needs a high-level understanding of Riemannian geometry. Each
algorithm can be used with any of the manifolds and metric implemented
in the package.

To see additional examples, go to the
`examples <https://github.com/geomstats/geomstats/tree/master/examples>`__
or
`notebooks <https://github.com/geomstats/geomstats/tree/master/notebooks>`__
directories.

Contributing
------------

See our
`contributing <https://github.com/geomstats/geomstats/blob/master/docs/contributing.rst>`__
guidelines!

Interested? Contact us and join the next hackathons. Previous Geomstats events include:

-  January 2020: hackathon at Inria Sophia-Antipolis, Nice, France
-  April 2020: remote online hackathon
-  March - April 2021: hackathon, hybrid at Inria Sophia-Antipolis / remotely with contributors from around the world
-  July 2021: hackathon at the Geometric Science of Information (GSI) conference, Paris, France
-  August 2021: international Coding Challenge at the International Conference on Learning Representations (ICLR), remotely
-  December 2021: fixit hackathon at the Sorbonne Center for Artificial Intelligence, Paris, France.
-  February 2022: hackathon, hybrid at Inria Sophia-Antipolis / remotely with contributors from around the world
-  April 2022: in-person hackathon at the Villa Cynthia, Saint Raphael, France.
-  April 2022: international Coding Challenge at the International Conference on Learning Representations (ICLR), remotely.
-  June 2022: hakathon at the University of Washington (UW).
-  October 17-21, 2022: hackathon during the trimester `Geometry and Statistics in Data Sciences <https://indico.math.cnrs.fr/category/498/>`__, in Paris.


Acknowledgements
----------------

This work is supported by:

-  the Inria-Stanford associated team `GeomStats <http://www-sop.inria.fr/asclepios/projects/GeomStats/>`__,
-  the European Research Council (ERC) under the European Union's Horizon 2020 research and innovation program (grant agreement `G-Statistics <https://team.inria.fr/epione/en/research/erc-g-statistics/>`__ No. 786854),
-  the French society for applied and industrial mathematics (`SMAI <http://smai.emath.fr/>`__),
-  the National Science Foundation (grant NSF DMS RTG 1501767).

.. |Twitter| image:: https://img.shields.io/twitter/follow/geomstats?label=Follow%20%40geomstats%20%20%20%20&style=social
   :target: https://twitter.com/geomstats
.. |PyPI version| image:: https://badge.fury.io/py/geomstats.svg
   :target: https://badge.fury.io/py/geomstats
.. |Build Status| image:: https://github.com/geomstats/geomstats/actions/workflows/test.yml/badge.svg
   :target: https://github.com/geomstats/geomstats/actions/workflows/test.yml
.. |Slack| image:: https://img.shields.io/badge/Slack-Join-yellow
   :target: https://join.slack.com/t/geomstats/shared_invite/zt-15t8k0q7r-Duxt6j6aA3rDOIms2Vd~RQ
.. |Coverage Status np| image:: https://codecov.io/gh/geomstats/geomstats/branch/master/graph/badge.svg?flag=numpy
   :target: https://codecov.io/gh/geomstats/geomstats
.. |Coverage Status autograd| image:: https://codecov.io/gh/geomstats/geomstats/branch/master/graph/badge.svg?flag=autograd
   :target: https://codecov.io/gh/geomstats/geomstats
.. |Coverage Status tf| image:: https://codecov.io/gh/geomstats/geomstats/branch/master/graph/badge.svg?flag=tensorflow
   :target: https://codecov.io/gh/geomstats/geomstats
.. |Coverage Status torch| image:: https://codecov.io/gh/geomstats/geomstats/branch/master/graph/badge.svg?flag=pytorch
   :target: https://codecov.io/gh/geomstats/geomstats
.. |Zenodo| image:: https://zenodo.org/badge/108200238.svg
   :target: https://zenodo.org/badge/latestdoi/108200238
.. |Downloads| image:: https://static.pepy.tech/personalized-badge/geomstats?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=Downloads
   :target: https://pepy.tech/project/geomstats
.. |python| image:: https://img.shields.io/badge/python-3.7+-blue?logo=python
   :target: https://www.python.org/
.. |tutorial| image:: https://img.shields.io/youtube/views/Ju-Wsd84uG0?label=watch&style=social
   :target: https://www.youtube.com/watch?v=Ju-Wsd84uG0
.. |doc| image:: https://img.shields.io/badge/docs-website-brightgreen?style=flat
   :target: https://geomstats.github.io/?badge=latest
.. |binder| image:: https://mybinder.org/badge_logo.svg
   :target: https://mybinder.org/v2/gh/geomstats/geomstats/master?filepath=notebooks
.. |contributions| image:: https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat
   :target: https://geomstats.github.io/contributing.html
